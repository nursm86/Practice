@model Practice.Models.product

@{
    ViewBag.Title = "ProductInfo";

    // Angular Properties
    var id = Request.QueryString["id"];//ViewContext.RouteData.Values["id"];
    
    //WebApi link for single row
    var getProductByIdUrl = Url.HttpRouteUrl("", new { controller = "Product", action = "GetProductInfoById"});
    var editProductUrl = Url.HttpRouteUrl("", new { controller = "Product", action = "UpdateProduct"});
    var deleteProductByIdUrl = Url.HttpRouteUrl("", new { controller = "Product", action = "DeleteProductById"});
    var createNewProductUrl = Url.HttpRouteUrl("", new { controller = "Product", action = "CreateNewProduct" });

    ////WebApi link for List
    var getAllProductUrl = Url.HttpRouteUrl("", new { controller = "Product", action = "GetProductsList" });

    //Angular Function Name
    var addOrUpdate = "addOrUpdate";
    var deleteModal = "deleteModal";
    var search = "search";
}

<div ng-app="myApp" ng-controller="productInfo" class="form-horizontal" ng-init="Init(
      '@getProductByIdUrl',
      '@deleteProductByIdUrl',
      '@getAllProductUrl',
     '@createNewProductUrl ',
     '@editProductUrl'
     )">
    <h2>{{msg}}</h2>
    <hr />

    @*<label>Click me: <input type="checkbox" ng-model="checked" ng-init="checked=true" /></label><br />
            Show when checked:
                <span ng-hide="checked" class="animate-if">
                This is for hide when checkbox is unchecked.
            </span><br />
           <span ng-if="checked" class="animate-if">
            This is for if when checkbox is unchecked.
        </span><br />
            <span ng-show="checked" class="animate-if">
                This is show when checkbox is unchecked.
            </span>*@

    <div class="form-group">
        @Html.LabelFor(model => model.productName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.productName, new { htmlAttributes = new { @class = "form-control", ng_model = "data.productName" } })
            @Html.ValidationMessageFor(model => model.productName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.quantity, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.quantity, new { htmlAttributes = new { @class = "form-control", ng_model = "data.quantity" } })
            @Html.ValidationMessageFor(model => model.quantity, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.price, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.price, new { htmlAttributes = new { @class = "form-control", ng_model = "data.price" } })
            @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" ng-click="@(addOrUpdate)()" value="{{show}}" class="btn btn-{{button}}" />
        </div>
    </div>
</div>
<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script type="text/javascript" src="~/Scripts/ProductInfo.js"></script>